# ------------------------------------------
# –§–∞–π–ª: launch.py (interface)
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –û—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã –∞—Ä–±–∏—Ç—Ä–∞–∂–∞.
# ------------------------------------------

# –ò–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ sys.path, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ –∏–∑ core –∏ interface
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

# –ò–º–ø–æ—Ä—Ç –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import json  # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ .json
import subprocess  # –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
import time  # –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –∑–∞–¥–µ—Ä–∂–∫–∞—Ö
import ccxt  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ)
import tkinter as tk  # –æ—Å–Ω–æ–≤–Ω–æ–π GUI toolkit
from tkinter import ttk, scrolledtext  # –≤–∏–¥–∂–µ—Ç—ã –∏–∑ tkinter
import threading  # –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
from datetime import datetime  # –¥–ª—è –º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏

# –ò–º–ø–æ—Ä—Ç –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
from core.monitor import start_monitoring  # –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ main.json
import concurrent.futures  # –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤ –ø—É–ª–µ –ø–æ—Ç–æ–∫–æ–≤
from core.profit.calculate import process_item  # –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–∏–±—ã–ª–∏ –ø–æ –ø–∞—Ä–µ
from interface.render import format_result_as_text_widget_links  # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π JSON —Å –º–æ–Ω–µ—Ç–∞–º–∏ –∏ –±–∏—Ä–∂–∞–º–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–æ–¥–∏–Ω —Ä–∞–∑)
with open('data/main.json', 'r') as f:
    data = json.load(f)

# –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –æ—Å—Ç–∞–≤–ª–µ–Ω –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
def process_data(data):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—É–ª–∞ –ø–æ—Ç–æ–∫–æ–≤
    with concurrent.futures.ThreadPoolExecutor() as executor:
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
        futures = [executor.submit(process_item, key, value) for key, value in data.items()]
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –º–µ—Ä–µ –∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        for future in concurrent.futures.as_completed(futures):
            result = future.result()
            if result:
                print(result)

# -----------------------------------------------------------------------------
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
# -----------------------------------------------------------------------------
def run_interface():
    # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ-–∑–∞–≥—Ä—É–∑—á–∏–∫
    splash = tk.Tk()
    splash.attributes("-topmost", True)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö –æ–∫–æ–Ω
    splash.title("–ó–∞–≥—Ä—É–∑–∫–∞...")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
    splash.geometry("300x100")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞
    splash_label = ttk.Label(splash, text="‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...", font=("Arial", 14, "italic"))  # –ú–µ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    splash_label.pack(expand=True)  # –†–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É –≤ —Ü–µ–Ω—Ç—Ä–µ –æ–∫–Ω–∞

    splash.protocol("WM_DELETE_WINDOW", lambda: None)  # –ë–ª–æ–∫–∏—Ä—É–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ splash –æ–∫–Ω–∞ –≤—Ä—É—á–Ω—É—é
    is_animating = True  # –§–ª–∞–≥ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
    first_data_ready = False  # –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –±—ã–ª –ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω update
    splash_active = True  # –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ splash –æ–∫–Ω–∞
    after_id = None  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ .after()

    # –§—É–Ω–∫—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ "–ó–∞–≥—Ä—É–∑–∫–∞..."
    def splash_animation():
        dots = ["", ".", "..", "..."]  # –†–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        i = 0  # –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è

        def update_label():
            nonlocal i, after_id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            try:
                if splash_active and splash.winfo_exists():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–æ –ª–∏ –æ–∫–Ω–æ
                    splash_label.config(text=f"‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞{dots[i % 4]}")  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –º–µ—Ç–∫–∏
                    i += 1  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
                    after_id = splash.after(500, update_label)  # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ 500 –º—Å
            except tk.TclError:
                return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ

        update_label()  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏

    splash_animation()  # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏

    # –§–æ–Ω–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞ "–ê–Ω–∞–ª–∏–∑..."
    def animate_analysis_status():
        dots = ["", ".", "..", "..."]  # –†–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        i = 0  # –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        while is_animating:  # –ü–æ–∫–∞ –∞–Ω–∏–º–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞
            status_label.config(text=f"üîÑ –ê–Ω–∞–ª–∏–∑{dots[i % 4]}")  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
            i += 1  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
            time.sleep(0.5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏

    analysis_thread = None  # –•—Ä–∞–Ω–∏—Ç –ø–æ—Ç–æ–∫ –∞–Ω–∞–ª–∏–∑–∞

    def on_run():
        nonlocal analysis_thread  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω—é—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞
        def task():
            nonlocal is_animating  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω—é—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ñ–ª–∞–≥–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
            is_animating = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
            threading.Thread(target=animate_analysis_status, daemon=True).start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
            run_button.config(state="disabled")  # –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—É—Å–∫–∞
            results_text.delete('1.0', tk.END)  # –û—á–∏—â–∞–µ–º –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            try:
                amount_usdt = float(amount_entry.get())  # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∫–∞–ø–∏—Ç–∞–ª–∞ –∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞
                with open('data/main.json', 'r') as f:
                    local_data = json.load(f)  # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON
                with concurrent.futures.ThreadPoolExecutor() as executor:  # –°–æ–∑–¥–∞–µ–º –ø—É–ª –ø–æ—Ç–æ–∫–æ–≤
                    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º —Å—É–º–º—ã –∫–∞–ø–∏—Ç–∞–ª–∞
                    futures = [executor.submit(process_item, key, value, amount_usdt) for key, value in local_data.items()]
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –º–µ—Ä–µ –∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                    for future in concurrent.futures.as_completed(futures):
                        if getattr(threading.current_thread(), "stopped", False):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø–æ—Ç–æ–∫
                            break
                        result = future.result()  # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
                        if result:  # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø—É—Å—Ç–æ–π
                            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                            results_text.after(0, lambda r=result: (
                                format_result_as_text_widget_links(results_text, r),  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                                results_text.see(tk.END)  # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                            ))
            except Exception as e:
                results_text.insert(tk.END, f"–û—à–∏–±–∫–∞: {str(e)}")  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –∏ –≤—ã–≤–æ–¥–∏–º –∏—Ö
            finally:
                is_animating = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
                status_label.config(text="‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω")  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                analysis_thread = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫ –∞–Ω–∞–ª–∏–∑–∞
            run_button.config(state="normal")  # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—É—Å–∫–∞

        analysis_thread = threading.Thread(target=task)  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è –∑–∞–¥–∞—á–∏
        setattr(analysis_thread, "stopped", False)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –ø–æ—Ç–æ–∫–∞
        analysis_thread.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫

    def on_clear():
        nonlocal analysis_thread, is_animating  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        results_text.delete('1.0', tk.END)  # –û—á–∏—â–∞–µ–º –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if analysis_thread and analysis_thread.is_alive():  # –ï—Å–ª–∏ –∞–Ω–∞–ª–∏–∑ –µ—â–µ –∏–¥–µ—Ç
            is_animating = False  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            setattr(analysis_thread, "stopped", True)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –ø–æ—Ç–æ–∫–∞
            analysis_thread = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫ –∞–Ω–∞–ª–∏–∑–∞
            run_button.config(state="normal")  # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—É—Å–∫–∞
            status_label.config(text="üõë –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ—Ä–≤–∞–Ω")  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        else:
            status_label.config(text="üßπ –ß–∞—Ç –æ—á–∏—â–µ–Ω")  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ

    # –û—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    window = tk.Tk()  # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    window.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    window.title("Arbitrage Checker")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.geometry("920x600")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞

    frame = ttk.Frame(window, padding=10)  # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    frame.pack(fill=tk.BOTH, expand=True)  # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ

    # –ü–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –≤–≤–æ–¥–æ–º —Å—É–º–º—ã
    control_panel = ttk.Frame(frame)  # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    control_panel.pack(fill=tk.X, pady=5)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ –æ—Å–∏ X

    amount_label = ttk.Label(control_panel, text="–ö–∞–ø–∏—Ç–∞–ª $:")  # –ú–µ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ –∫–∞–ø–∏—Ç–∞–ª–∞
    amount_label.pack(side=tk.LEFT, padx=(0, 5))  # –†–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É —Å–ª–µ–≤–∞
    amount_entry = ttk.Entry(control_panel)  # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –∫–∞–ø–∏—Ç–∞–ª–∞
    amount_entry.insert(0, "95")  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    amount_entry.pack(side=tk.LEFT, padx=(0, 10))  # –†–∞–∑–º–µ—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–ª–µ–≤–∞

    run_button = ttk.Button(control_panel, text="–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑", command=lambda: threading.Thread(target=on_run).start())  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
    run_button.pack(side=tk.LEFT, padx=(0, 5))  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–ª–µ–≤–∞

    clear_button = ttk.Button(control_panel, text="–û—á–∏—Å—Ç–∏—Ç—å", command=on_clear)  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    clear_button.pack(side=tk.LEFT, padx=(0, 10))  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–ª–µ–≤–∞

    # –ü–æ–ª–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
    results_text = scrolledtext.ScrolledText(frame, wrap=tk.WORD, width=100, height=30)  # –ü–æ–ª–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results_text.pack(pady=10, fill=tk.BOTH, expand=True)  # –†–∞–∑–º–µ—â–∞–µ–º –ø–æ–ª–µ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π

    timestamp_label = ttk.Label(control_panel, text="–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: -")  # –ú–µ—Ç–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    timestamp_label.pack(side=tk.LEFT, padx=(0, 10))  # –†–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É —Å–ª–µ–≤–∞

    status_label = ttk.Label(control_panel, text="‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...", font=("Arial", 12, "italic"))  # –ú–µ—Ç–∫–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
    status_label.pack(side=tk.LEFT)  # –†–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É —Å–ª–µ–≤–∞

    # –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    def update_ui_callback(formatted_time):
        nonlocal first_data_ready, is_animating, splash_active, after_id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        if after_id is not None:  # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤
            try:
                splash.after_cancel(after_id)  # –û—Ç–º–µ–Ω—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤
            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        timestamp_label.config(text=f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {formatted_time}")  # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏
        if not first_data_ready:  # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            splash_active = False  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ False
            status_label.config(text="‚úÖ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É")  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            run_button.config(state="normal")  # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—É—Å–∫–∞
            first_data_ready = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã
            splash.destroy()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –∑–∞–≥—Ä—É–∑–∫–∏
            window.deiconify()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ

    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ main.json
    base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
    main_py_path = os.path.join(base_dir, "main.py")
    json_path = os.path.join(base_dir, "data", "main.json")

    start_monitoring(lambda time: window.after(0, lambda: update_ui_callback(time)),
                     main_py_path=main_py_path,
                     json_path=json_path)  # –ü—É—Ç—å –∫ main.json

    window.mainloop()  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    run_interface()  # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ñ–∞–π–ª–∞ –Ω–∞–ø—Ä—è–º—É—é
