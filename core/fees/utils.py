# ------------------------------------------
# –§–∞–π–ª: utils.py (core/fees)
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–∏—Å—Å–∏—è—Ö –Ω–∞ –≤–≤–æ–¥/–≤—ã–≤–æ–¥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
# —Å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –±–∏—Ä–∂, –≤–∫–ª—é—á–∞—è OKEX, Gate.io –∏ –¥—Ä—É–≥–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∏—Ö API.
# ------------------------------------------
import asyncio  # –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
import base64  # –¥–ª—è –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏ OKEX –≤ base64
import hashlib  # –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
import hmac  # –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HMAC-–ø–æ–¥–ø–∏—Å–∏
import datetime  # –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è UTC –≤—Ä–µ–º–µ–Ω–∏
import aiohttp  # –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ HTTP-–∑–∞–ø—Ä–æ—Å—ã

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–∏ —Å Gate.io (–æ—Ç–¥–µ–ª—å–Ω—ã–π sync API)
from core.fees.gateio import get_fee_gateio

# –ò–º–ø–æ—Ä—Ç –∫–ª—é—á–µ–π –¥–ª—è OKEX –∏–∑ .env
from config.secrets import OKEX_API_KEY, OKEX_SECRET, OKEX_PASSWORD

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–π —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–∏—Ä–∂–∏
async def fetch_fees(exchange):
    fees = {}  # —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–π –ø–æ –≤–∞–ª—é—Ç–∞–º
    try:
        # üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ OKEX (—Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏ HMAC)
        if exchange.id == "okex":
            base_url = "https://www.okx.com"
            path = "/api/v5/asset/currencies"
            url = base_url + path

            # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ ISO-—Ñ–æ—Ä–º–∞—Ç–µ
            timestamp = datetime.datetime.utcnow().isoformat("T", "seconds") + "Z"
            method = "GET"
            body = ""  # GET-–∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–µ–ª–∞

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
            message = timestamp + method + path + body
            secret = exchange.secret.encode()  # —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ exchange
            signature = hmac.new(secret, message.encode(), hashlib.sha256).digest()
            sign_b64 = base64.b64encode(signature).decode()  # base64 –ø–æ–¥–ø–∏—Å—å

            # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è OKEX API
            headers = {
                'OK-ACCESS-KEY': OKEX_API_KEY,
                'OK-ACCESS-SIGN': sign_b64,
                'OK-ACCESS-TIMESTAMP': timestamp,
                'OK-ACCESS-PASSPHRASE': OKEX_PASSWORD,
            }

            # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π GET-–∑–∞–ø—Ä–æ—Å
            async with aiohttp.ClientSession() as session:
                async with session.get(url, headers=headers) as response:
                    result = await response.json()

                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç
                    for item in result.get("data", []):
                        coin = item.get("ccy")  # —Ç–∏–∫–µ—Ä –º–æ–Ω–µ—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä BTC)
                        if not coin:
                            continue
                        fee_info = {
                            "info": {coin: item},
                            "networks": {}
                        }
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∏—Å—Å–∏–∏ –ø–æ –∫–∞–∂–¥–æ–π —Å–µ—Ç–∏ –º–æ–Ω–µ—Ç—ã
                        for net in item.get("chains", []):
                            chain_name = net.get("chain")
                            if chain_name:
                                fee_info["networks"][chain_name] = {
                                    "withdraw": {
                                        "fee": float(net.get("minFee", 0.0))
                                    }
                                }
                        fees[coin] = fee_info

        # üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ Gate.io ‚Äî –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º sync API —á–µ—Ä–µ–∑ run_in_executor
        elif exchange.id == "gateio":
            loop = asyncio.get_event_loop()
            fees = await loop.run_in_executor(None, get_fee_gateio)

        # üîπ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–ª—É—á–∞–π –¥–ª—è –¥—Ä—É–≥–∏—Ö –±–∏—Ä–∂
        else:
            fees = await exchange.fetch_deposit_withdraw_fees()

        return fees

    except Exception as e:
        # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
        print(f"[ERROR] Failed to fetch fees from {exchange.id}: {e}")
        raise
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∏—Ä–∂–µ
        await exchange.close()